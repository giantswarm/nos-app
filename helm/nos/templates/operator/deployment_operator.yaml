{{- if .Values.operator.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "operator.fullname" . }}
  labels:
    control-plane: "nos-controller-manager"
    {{- include "operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.operator.replicaCount }}
  selector:
    matchLabels:
      control-plane: "nos-controller-manager"
      {{- include "operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: "{{ include "operator.fullname" . }}"
        {{- with .Values.operator.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        control-plane: "nos-controller-manager"
        {{- include "operator.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "operator.fullname" . }}
      securityContext:
        {{- toYaml .Values.operator.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 10
      containers:
        - name: {{ include "operator.fullname" . }}
          image: "{{ .Values.operator.image.repository }}:{{ .Values.operator.image.tag | default .Chart.AppVersion }}"
          command:
            - /manager
          args:
            - --config={{ include "operator.configFileName" . }}
            {{- if gt (int .Values.operator.logLevel) 0 }}
            - --zap-log-level={{ .Values.operator.logLevel }}
            {{ end }}
          imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.operator.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /{{ include "operator.configFileName" . }}
              name: operator-config
              subPath: {{ include "operator.configFileName" . }}
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          securityContext:
            {{- toYaml .Values.operator.securityContext | nindent 12 }}

        - name: kube-rbac-proxy
          image: "{{ .Values.operator.kubeRbacProxy.image.repository }}:{{ .Values.operator.kubeRbacProxy.image.tag }}"
          args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            {{- if gt (int .Values.operator.kubeRbacProxy.logLevel) 0 }}
            - --v={{ .Values.operator.kubeRbacProxy.logLevel }}
            {{ end }}
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources: {{- toYaml .Values.operator.kubeRbacProxy.resources | nindent 12 }}

      {{- with .Values.operator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - configMap:
            name: {{ include "operator.config.configMapName" . }}
          name: operator-config
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ include "operator.webhookCertSecretName" . }}
{{- end -}}